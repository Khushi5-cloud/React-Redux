{"ast":null,"code":"// UserService \n\n// By using then,catch\n\n// By using async/await\n/*\nimport axios from 'axios';\n\nconst BASE_URL = 'http://localhost:2000';\n\nconst UserService = {\n    registerUser: async (userData) => {\n        try {\n            const response = await axios.post(`${BASE_URL}/register`, userData);\n            return response.data;\n        } catch (error) {\n            console.log(error);\n            throw new Error(error);\n        }\n    },\n\n    loginUser: async (credentials) => {\n        try {\n            const response = await axios.post(`${BASE_URL}/login`, credentials);\n            console.log(response);\n            return response.data;\n        } catch (error) {\n            console.log(error);\n            throw new Error(error);\n        }\n    },\n\n    updateUserProfile: async (updatedData, token) => {\n        console.log(updatedData);\n        try {\n            const response = await axios.put(`${BASE_URL}/users/${updatedData._id}`, updatedData, {\n                headers: { authorization: `Bearer ${token}` }\n            });\n            console.log(response.data);\n            return response.data;\n        } catch (error) {\n            console.log(error);\n            return error;\n        }\n    }\n};\n\nexport default UserService;\n*/","map":{"version":3,"names":[],"sources":["C:/Users/KhushiSingh/Desktop/HTML/Mongo_Connect_react_expres_spring/03-ibm-frontend-react/src/services/UserService.js"],"sourcesContent":["// UserService \n\n\n// By using then,catch\n\n\n\n\n\n// By using async/await\n/*\nimport axios from 'axios';\n\nconst BASE_URL = 'http://localhost:2000';\n\nconst UserService = {\n    registerUser: async (userData) => {\n        try {\n            const response = await axios.post(`${BASE_URL}/register`, userData);\n            return response.data;\n        } catch (error) {\n            console.log(error);\n            throw new Error(error);\n        }\n    },\n\n    loginUser: async (credentials) => {\n        try {\n            const response = await axios.post(`${BASE_URL}/login`, credentials);\n            console.log(response);\n            return response.data;\n        } catch (error) {\n            console.log(error);\n            throw new Error(error);\n        }\n    },\n\n    updateUserProfile: async (updatedData, token) => {\n        console.log(updatedData);\n        try {\n            const response = await axios.put(`${BASE_URL}/users/${updatedData._id}`, updatedData, {\n                headers: { authorization: `Bearer ${token}` }\n            });\n            console.log(response.data);\n            return response.data;\n        } catch (error) {\n            console.log(error);\n            return error;\n        }\n    }\n};\n\nexport default UserService;\n*/\n"],"mappings":"AAAA;;AAGA;;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}