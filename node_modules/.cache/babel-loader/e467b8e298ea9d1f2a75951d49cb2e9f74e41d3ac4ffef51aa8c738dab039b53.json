{"ast":null,"code":"// UserService \n\n// By using then,catch\nimport axios from 'axios';\nconst BASE_URL = 'http://localhost:2000';\nconst UserService = {\n  registerUser: async userData => {\n    try {\n      const response = await axios.post(`${BASE_URL}/register`, userData);\n      return response.data;\n    } catch (error) {\n      console.error(error);\n      throw new Error(error);\n    }\n  },\n  loginUser: async credentials => {\n    console.log(credentials);\n    try {\n      const res = await axios.post(`${BASE_URL}/login`, credentials);\n      return res.data;\n    } catch (err) {\n      console.log(err);\n      throw new Error(err);\n    }\n  },\n  updateUserProfile: async (updatedData, token) => {\n    console.log(updatedData);\n    try {\n      const response = await axios.put(`${BASE_URL}/users/${updatedData._id}`, updatedData, {\n        headers: {\n          authorization: `Bearer ${token}`\n        }\n      });\n      console.log(response.data);\n      return response.data;\n    } catch (error) {\n      console.error(error);\n      return await Promise.reject(error);\n    }\n  }\n};\nexport default UserService;\n\n// By using async/await\n/*\nimport axios from 'axios';\n\nconst BASE_URL = 'http://localhost:2000';\n\nconst UserService = {\n    registerUser: async (userData) => {\n        try {\n            const response = await axios.post(`${BASE_URL}/register`, userData);\n            return response.data;\n        } catch (error) {\n            console.log(error);\n            throw new Error(error);\n        }\n    },\n\n    loginUser: async (credentials) => {\n        try {\n            const response = await axios.post(`${BASE_URL}/login`, credentials);\n            console.log(response);\n            return response.data;\n        } catch (error) {\n            console.log(error);\n            throw new Error(error);\n        }\n    },\n\n    updateUserProfile: async (updatedData, token) => {\n        console.log(updatedData);\n        try {\n            const response = await axios.put(`${BASE_URL}/users/${updatedData._id}`, updatedData, {\n                headers: { authorization: `Bearer ${token}` }\n            });\n            console.log(response.data);\n            return response.data;\n        } catch (error) {\n            console.log(error);\n            return error;\n        }\n    }\n};\n\nexport default UserService;\n*/","map":{"version":3,"names":["axios","BASE_URL","UserService","registerUser","userData","response","post","data","error","console","Error","loginUser","credentials","log","res","err","updateUserProfile","updatedData","token","put","_id","headers","authorization","Promise","reject"],"sources":["C:/Users/KhushiSingh/Desktop/HTML/Mongo_Connect_react_expres_spring/03-ibm-frontend-react/src/services/UserService.js"],"sourcesContent":["// UserService \n\n\n// By using then,catch\nimport axios from 'axios';\n\nconst BASE_URL = 'http://localhost:2000';\n\n\nconst UserService= {\n    registerUser: async (userData) => {\n        try {\n            const response = await axios.post(`${BASE_URL}/register`, userData);\n            return response.data;\n        } catch (error) {\n            console.error(error);\n            throw new Error(error);\n        }\n    },\n\n\n    loginUser: async (credentials) => {\n        console.log(credentials);\n        try {\n            const res = await axios.post(`${BASE_URL}/login`, credentials);\n            return res.data;\n        } catch (err) {\n            console.log(err);\n            throw new Error(err);\n        }\n        \n    },\n\n        updateUserProfile: async (updatedData, token) => {\n            console.log(updatedData);\n            try {\n                const response = await axios.put(`${BASE_URL}/users/${updatedData._id}`, updatedData, {\n                    headers: { authorization: `Bearer ${token}` }\n                });\n                console.log(response.data);\n                return response.data;\n            } catch (error) {\n                console.error(error);\n                return await Promise.reject(error);\n            }\n        }\n    \n    \n};\n\nexport default UserService;\n\n\n\n\n\n\n// By using async/await\n/*\nimport axios from 'axios';\n\nconst BASE_URL = 'http://localhost:2000';\n\nconst UserService = {\n    registerUser: async (userData) => {\n        try {\n            const response = await axios.post(`${BASE_URL}/register`, userData);\n            return response.data;\n        } catch (error) {\n            console.log(error);\n            throw new Error(error);\n        }\n    },\n\n    loginUser: async (credentials) => {\n        try {\n            const response = await axios.post(`${BASE_URL}/login`, credentials);\n            console.log(response);\n            return response.data;\n        } catch (error) {\n            console.log(error);\n            throw new Error(error);\n        }\n    },\n\n    updateUserProfile: async (updatedData, token) => {\n        console.log(updatedData);\n        try {\n            const response = await axios.put(`${BASE_URL}/users/${updatedData._id}`, updatedData, {\n                headers: { authorization: `Bearer ${token}` }\n            });\n            console.log(response.data);\n            return response.data;\n        } catch (error) {\n            console.log(error);\n            return error;\n        }\n    }\n};\n\nexport default UserService;\n*/\n"],"mappings":"AAAA;;AAGA;AACA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,QAAQ,GAAG,uBAAuB;AAGxC,MAAMC,WAAW,GAAE;EACfC,YAAY,EAAE,MAAOC,QAAQ,IAAK;IAC9B,IAAI;MACA,MAAMC,QAAQ,GAAG,MAAML,KAAK,CAACM,IAAI,CAAE,GAAEL,QAAS,WAAU,EAAEG,QAAQ,CAAC;MACnE,OAAOC,QAAQ,CAACE,IAAI;IACxB,CAAC,CAAC,OAAOC,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;MACpB,MAAM,IAAIE,KAAK,CAACF,KAAK,CAAC;IAC1B;EACJ,CAAC;EAGDG,SAAS,EAAE,MAAOC,WAAW,IAAK;IAC9BH,OAAO,CAACI,GAAG,CAACD,WAAW,CAAC;IACxB,IAAI;MACA,MAAME,GAAG,GAAG,MAAMd,KAAK,CAACM,IAAI,CAAE,GAAEL,QAAS,QAAO,EAAEW,WAAW,CAAC;MAC9D,OAAOE,GAAG,CAACP,IAAI;IACnB,CAAC,CAAC,OAAOQ,GAAG,EAAE;MACVN,OAAO,CAACI,GAAG,CAACE,GAAG,CAAC;MAChB,MAAM,IAAIL,KAAK,CAACK,GAAG,CAAC;IACxB;EAEJ,CAAC;EAEGC,iBAAiB,EAAE,MAAAA,CAAOC,WAAW,EAAEC,KAAK,KAAK;IAC7CT,OAAO,CAACI,GAAG,CAACI,WAAW,CAAC;IACxB,IAAI;MACA,MAAMZ,QAAQ,GAAG,MAAML,KAAK,CAACmB,GAAG,CAAE,GAAElB,QAAS,UAASgB,WAAW,CAACG,GAAI,EAAC,EAAEH,WAAW,EAAE;QAClFI,OAAO,EAAE;UAAEC,aAAa,EAAG,UAASJ,KAAM;QAAE;MAChD,CAAC,CAAC;MACFT,OAAO,CAACI,GAAG,CAACR,QAAQ,CAACE,IAAI,CAAC;MAC1B,OAAOF,QAAQ,CAACE,IAAI;IACxB,CAAC,CAAC,OAAOC,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;MACpB,OAAO,MAAMe,OAAO,CAACC,MAAM,CAAChB,KAAK,CAAC;IACtC;EACJ;AAGR,CAAC;AAED,eAAeN,WAAW;;AAO1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}